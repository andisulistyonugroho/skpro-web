// @generated by protobuf-ts 2.9.4 with parameter optimize_code_size
// @generated from protobuf file "area.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Area } from "./area";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { aaResponse } from "./area";
import type { aaRequest } from "./area";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Area
 */
export interface IAreaClient {
    /**
     * @generated from protobuf rpc: AvailableArea(aaRequest) returns (aaResponse);
     */
    availableArea(input: aaRequest, options?: RpcOptions): UnaryCall<aaRequest, aaResponse>;
}
/**
 * @generated from protobuf service Area
 */
export class AreaClient implements IAreaClient, ServiceInfo {
    typeName = Area.typeName;
    methods = Area.methods;
    options = Area.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: AvailableArea(aaRequest) returns (aaResponse);
     */
    availableArea(input: aaRequest, options?: RpcOptions): UnaryCall<aaRequest, aaResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<aaRequest, aaResponse>("unary", this._transport, method, opt, input);
    }
}
