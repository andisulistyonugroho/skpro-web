// @generated by protobuf-ts 2.9.4 with parameter optimize_code_size
// @generated from protobuf file "authenticator.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Authenticator } from "./authenticator";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoginResponse } from "./authenticator";
import type { LoginRequest } from "./authenticator";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Authenticator
 */
export interface IAuthenticatorClient {
    /**
     * @generated from protobuf rpc: Login(LoginRequest) returns (LoginResponse);
     */
    login(input: LoginRequest, options?: RpcOptions): UnaryCall<LoginRequest, LoginResponse>;
}
/**
 * @generated from protobuf service Authenticator
 */
export class AuthenticatorClient implements IAuthenticatorClient, ServiceInfo {
    typeName = Authenticator.typeName;
    methods = Authenticator.methods;
    options = Authenticator.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Login(LoginRequest) returns (LoginResponse);
     */
    login(input: LoginRequest, options?: RpcOptions): UnaryCall<LoginRequest, LoginResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoginRequest, LoginResponse>("unary", this._transport, method, opt, input);
    }
}
